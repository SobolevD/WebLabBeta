<head>
    <title>Легкий уровень</title>
    <meta charset="utf-8" />
    <link rel="stylesheet" type="text/css" href="../styles/test.css" />
</head>


<body>

    <nav>
        <ul>
            <li><a href="/home/Index">Главная</a></li>
            <li><a href="/home/CppGuide">Базовые элементы языка C++</a></li>
            <li><a href="/home/CppLessonsReferences">Уроки по C++</a></li>
            <li><a href="/home/TestsCpp">Тесты по C++</a></li>
        </ul>
    </nav>

    <div>
        <h1>Тест по С++ легкий уровень</h1>
        <form method="post" , action="">

            <h3>Какой из этих типов не существует в языке C++?</h3>
            <ul>

                <li> <input type="radio" name="Q1" value="A1"> int</li>
                <li> <input type="radio" name="Q1" value="A2"> char</li>
                <li> <input type="radio" name="Q1" value="A3"> bool</li>
                <li><input type="radio" name="Q1" value="A4"> real</li>

            </ul>

            <h3>Какого ключевого слова нет в языке C++?</h3>
            <ul>
                <li><input type="radio" name="Q2" value="A1"> inline</li>
                <li><input type="radio" name="Q2" value="A2"> abstract</li>
                <li><input type="radio" name="Q2" value="A3"> register</li>
                <li><input type="radio" name="Q2" value="A4"> auto</li>
            </ul>

            <h3>Выберите типы, соответствующие представлению вещественных чисел:</h3>
            <ul>
                <li><input type="checkbox" name="Q3" value="A1"> double</li>
                <li><input type="checkbox" name="Q3" value="A2"> long double</li>
                <li><input type="checkbox" name="Q3" value="A3"> bool</li>
                <li><input type="checkbox" name="Q3" value="A4"> float</li>
                <li><input type="checkbox" name="Q3" value="A5"> char</li>
            </ul>

            <h3>Выберите типы, соответствующие представлению целых чисел:</h3>
            <ul>
                <li><input type="checkbox" name="Q4" value="A1"> unsigned double</li>
                <li><input type="checkbox" name="Q4" value="A2"> int</li>
                <li><input type="checkbox" name="Q4" value="A3"> char</li>
                <li><input type="checkbox" name="Q4" value="A4"> float</li>
                <li><input type="checkbox" name="Q4" value="A5"> long int</li>
            </ul>

            <h3>Для чего служит оператор return?</h3>
            <ul>
                <li><input type="checkbox" name="Q5" value="A1"> Используется для возврата значения из метода/функции</li>
                <li><input type="checkbox" name="Q5" value="A2"> Используется только для аварийного завершения программы</li>
                <li><input type="checkbox" name="Q5" value="A3"> Используется для завершения процедуры</li>
                <li><input type="checkbox" name="Q5" value="A4"> Часть выражения, выкидывающего исключение</li>
            </ul>

            <h3>cout и cin это:</h3>
            <ul>
                <li><input type="radio" name="Q6" value="A1"> Объекты, использующиеся для ввода и вывода соответственно
                данных на экран</li>
                <li><input type="radio" name="Q6" value="A2"> Объекты, использующиеся для вывода и ввода соответственно
                данных на экран</li>
                <li><input type="radio" name="Q6" value="A3"> Это ключевые слова перед типами, обозначающие цель данных
                переменных</li>
            </ul>

            <h3>Возможен ли следующий тип данных: void&?</h3>
            <ul>
                <li><input type="radio" name="Q7" value="A1"> Да</li>
                <li><input type="radio" name="Q7" value="A2"> Нет</li>
            </ul>

            <h3>Возможен ли следующий тип данных: void*?</h3>
            <ul>
                <li><input type="radio" name="Q8" value="A1"> Да<Br>
                <li><input type="radio" name="Q8" value="A2"> Нет<Br>
            </ul>

            <h3>Оператор switch - это:</h3>
            <ul>
                <li><input type="radio" name="Q9" value="A1"> Оператор перевода unsigned переменных в signed и наоборот</li>
                <li><input type="radio" name="Q9" value="A2"> Оператор множественного выбора</li>
                <li><input type="radio" name="Q9" value="A3"> Оператор перевода чисел из 16-ой системы счисления в 10-ую</li>
                <li><input type="radio" name="Q9" value="A4"> Аналог оператора sizeof, но для классов</li>
            </ul>

            <h3>Проверить размер типа можно оператором:</h3>
            <ul>
                <li><input type="radio" name="Q10" value="A1"> return</li>
                <li><input type="radio" name="Q10" value="A2"> sizeof</li>
                <li><input type="radio" name="Q10" value="A3"> typedef</li>
                <li><input type="radio" name="Q10" value="A4"> auto</li>
            </ul>

            <h3>Что такое леводопустимое выражение (lvalue)?</h3>
            <ul>
                <li><input type="radio" name="Q11" value="A1"> Это выражение, которое всегда в любом выражении
                находится слева</li>
                <li><input type="radio" name="Q11" value="A2"> Это выражение, ссылающееся на объект</li>
                <li><input type="radio" name="Q11" value="A3"> Это выражение, под которое необходимо выделять память
                в куче</li>
                <li><input type="radio" name="Q11" value="A4"> Это константные выражения</li>
            </ul>

            <h3>Чем отличается const от constexpr?</h3>
            <ul>
                <li><input type="radio" name="Q12" value="A1"> В отличие от const, constexpr позволяет сделать
                константным любой объект после того, как он был объявлен</li>
                <li><input type="radio" name="Q12" value="A2"> constexpr - это аналог const, который использовался
                до стандарта C++11</li>
                <li><input type="radio" name="Q12" value="A3"> constexpr обозначает константу времени
                компиляции</li>
                <li><input type="radio" name="Q12" value="A4"> const в отличие от constexpr может быть
                использован как модификатор для различных типов указателей</li>
            </ul>

            <h3>Выберите строки, в которых есть ошибки:</h3>
            <ul>
                <li><input type="checkbox" name="Q13" value="A1"> const a = 0; a = 15;</li>
                <li><input type="checkbox" name="Q13" value="A2"> const a = 7; const b = a;</li>
                <li><input type="checkbox" name="Q13" value="A3"> const char *const text;</li>
                <li><input type="checkbox" name="Q13" value="A4"> int tmp = 18; constexpr int myAge = tmp;</li>
            </ul>

            <h3>Что такое "литерал"?</h3>
            <ul>
                <li><input type="radio" name="Q14" value="A1"> Это другое название переменных, объявленных с помощью
                constexpr</li>
                <li><input type="radio" name="Q14" value="A2"> Один из операторов, который можно перегрузить</li>
                <li><input type="radio" name="Q14" value="A3"> Это один из типов данных, добавляемый стандартными
                библиотеками</li>
                <li><input type="radio" name="Q14" value="A4"> Это значение, которое вставляются непосредственно в код</li>
            </ul>

            <h3>Какие суффиксы могут иметь числовые литералы?</h3>
            <ul>
                <li><input type="checkbox" name="Q15" value="A1"> u</li>
                <li><input type="checkbox" name="Q15" value="A2"> l</li>
                <li><input type="checkbox" name="Q15" value="A3"> d</li>
                <li><input type="checkbox" name="Q15" value="A4"> ull</li>
                <li><input type="checkbox" name="Q15" value="A5"> llu</li>
                <li><input type="checkbox" name="Q15" value="A6"> f</li>
                <li><input type="checkbox" name="Q15" value="A7"> us</li>
            </ul>

            <h3>Что произойдет, если к переменной равной 255 типа unsigned char прибавить 10?</h3>
            <ul>
                <li><input type="radio" name="Q16" value="A1"> Произойдет ошибка на уровне компиляции: к символьным
                данным прибавлять число</li>
                <li><input type="radio" name="Q16" value="A2"> Произойдет ошибка на уровне исполнения программы:
                переполнение</li>
                <li><input type="radio" name="Q16" value="A3"> Произойдет переполнение, в результате которого
                получим число 9</li>
                <li><input type="radio" name="Q16" value="A4"> Произойдет переполнение, в результате которого
                останется число 255</li>
            </ul>

            <h3>Что произойдет, если к переменной равной 255 типа unsigned char прибавить 10?</h3>
            <ul>
                <li><input type="radio" name="Q17" value="A1"> Произойдет ошибка на уровне компиляции: к символьным данным прибавлять число</li>
                <li><input type="radio" name="Q17" value="A2"> Произойдет ошибка на уровне исполнения программы: переполнение</li>
                <li><input type="radio" name="Q17" value="A3"> Произойдет переполнение, в результате которого получим число 9</li>
                <li><input type="radio" name="Q17" value="A4"> Произойдет переполнение, в результате которого останется число 255</li>
            </ul>

            <h3>Выберите верные утверждения:</h3>
            <ul>
                <li><input type="checkbox" name="Q18" value="A1"> while(true){...} - бесконечный цикл</li>
                <li><input type="checkbox" name="Q18" value="A2"> for (auto i = 0; i < 10; ++i){...} - цикл выполнится 9 раз</li>
                <li><input type="checkbox" name="Q18" value="A3"> "++i" быстрее "i++"</li>
                <li><input type="checkbox" name="Q18" value="A4"> Модификатор const можно снять с помощью const_cast</li>
                <li><input type="checkbox" name="Q18" value="A5"> int*const ate - ate имеет константное значение</li>
                <li><input type="checkbox" name="Q18" value="A6"> '\t' - символ перевода на новую строку</li>
                <li><input type="checkbox" name="Q18" value="A7"> long double - это более точный вещественный тип, чем double</li>
            </ul>

            <h3>Выберите верные утверждения:</h3>
            <ul>
                <li><input type="checkbox" name="Q19" value="A1"> Оператор == всегда выдает верный результат сравнения двух вещественных чисел</li>
                <li><input type="checkbox" name="Q19" value="A2"> Оператор sizeof можно перегрузить</li>
                <li><input type="checkbox" name="Q19" value="A3"> Оператор "+" для нестандартных типов можно перегрузить</li>
                <li><input type="checkbox" name="Q19" value="A4"> Оператор "/" для стандартных типов можно перегрузить</li>
                <li><input type="checkbox" name="Q19" value="A5"> int t = 0; int& a = t; - "a" является ссылкой на переменную "t"</li>
            </ul>

            <h3>Что такое "директивы препроцессора"?</h3>
            <ul>
                <li><input type="radio" name="Q20" value="A1"> Это команды, позволяющие управлять режимом включения/выключения компьютера</li>
                <li><input type="radio" name="Q20" value="A2"> Это специальные команды, которые начинаются с символа # и НЕ заканчиваются точкой с запятой</li>
                <li><input type="radio" name="Q20" value="A3"> Это специальные команды для управления потоками данных</li>
                <li><input type="radio" name="Q20" value="A4"> Это специальное меню для контроллирования загруженность процессора</li>
            </ul>

            <h3>Правильный синтаксис define:</h3>
            <ul>
                <li><input type="radio" name="Q21" value="A1"> #define имя_макроса последовательность_символов</li>
                <li><input type="radio" name="Q21" value="A2"> #define последовательность_символов имя_макроса</li>
                <li><input type="radio" name="Q21" value="A3"> /define имя_макроса идентификатор_макроса последовательность_символов</li>
                <li><input type="radio" name="Q21" value="A4"> /define имя_макроса целое_числовое_значение;</li>
            </ul>

            <h3>Существует перечисление "enum key { GOLD, SILVER, COPPER };". Как можно обратиться к конкрентному полю из такого перечисления?</h3>
            <ul>
                <li><input type="checkbox" name="Q22" value="A1"> enum key::GOLD</li>
                <li><input type="checkbox" name="Q22" value="A2"> COPPER</li>
                <li><input type="checkbox" name="Q22" value="A3"> key::SILVER</li>
                <li><input type="checkbox" name="Q22" value="A4"> key.COPPER</li>
                <li><input type="checkbox" name="Q22" value="A5"> key.item(SILVER)</li>
            </ul>

            <h3>Существует ли конструкция "выражение:истина?ложь". Если да, то как она называется?</h3>
            <ul>
                <li><input type="radio" name="Q23" value="A1"> Существует, называется "тернарная операция"</li>
                <li><input type="radio" name="Q23" value="A2"> Не существует уже с C++7, поскольку появилась более современная замена - операторы if/else</li>
                <li><input type="radio" name="Q23" value="A3"> Существует, но последовательность истины и лжи перепутаны</li>
                <li><input type="radio" name="Q23" value="A4"> Не существует</li>
            </ul>

            <h3>Существует ли конструкция "выражение?истина:ложь". Если да, то как она называется?</h3>
            <ul>
                <li><input type="radio" name="Q24" value="A1"> Существует, называется "тернарная операция"</li>
                <li><input type="radio" name="Q24" value="A2"> Не существует уже с C++7, поскольку появилась более современная замена - операторы if/else</li>
                <li><input type="radio" name="Q24" value="A3"> Существует, но последовательность истины и лжи перепутаны</li>
                <li><input type="radio" name="Q24" value="A4"> Не существует</li>
            </ul>

            <h3>Что обозначает ключевое слово abstract?</h3>
            <ul>
                <li><input type="radio" name="Q25" value="A1"> Это ключевое слово ставится перед простыии типами без инициализации</li>
                <li><input type="radio" name="Q25" value="A2"> Такого ключевого слова в языке С++ нет</li>
                <li><input type="radio" name="Q25" value="A3"> Ключевое слово используется как более правильный флаг, обозначающий бесконечный цикл</li>
                <li><input type="radio" name="Q25" value="A4"> Ключевое слово перед выражением rvalue для того, чтобы сохранить результат до выхода rvalue за пределы области видимости</li>
            </ul>

            <h3>Выберите верные утверждения на счет ключевого слова nullptr:</h3>
            <ul>
                <li><input type="checkbox" name="Q26" value="A1"> nullptr появился в стандарте C++11</li>
                <li><input type="checkbox" name="Q26" value="A2"> nullptr может применяться только к ссылкам</li>
                <li><input type="checkbox" name="Q26" value="A3"> nullptr используется для обнуления какого-либо указателя</li>
                <li><input type="checkbox" name="Q26" value="A4"> nullptr обозначает константу-указатель NULL типа std::nullptr_t, которая может быть преобразована к любому типу необработанного указателя</li>
            </ul>

            <h3>Как обратиться к переменной "alpha", находящейся в области видимости "tmp"?</h3>
            <ul>
                <li><input type="radio" name="Q27" value="A1"> tmp.alpha</li>
                <li><input type="radio" name="Q27" value="A2"> tmp->alpha</li>
                <li><input type="radio" name="Q27" value="A3"> tmp::alpha</li>
                <li><input type="radio" name="Q27" value="A4"> alpha</li>
            </ul>

            <h3>Что произойдет, если к числу 101 добавить спереди 0?</h3>
            <ul>
                <li><input type="radio" name="Q28" value="A1"> Ничего не произойдет, особенность синтаксиса языка</li>
                <li><input type="radio" name="Q28" value="A2"> Число будет восприниматься программой как 16-ное</li>
                <li><input type="radio" name="Q28" value="A3"> Число будет восприниматься программой как 8-ное</li>
                <li><input type="radio" name="Q28" value="A4"> Число будет восприниматься программой как 2-ное</li>
            </ul>

            <h3>Что означает следующая запись в коде: 0xFFAA:</h3>
            <ul>
                <li><input type="radio" name="Q29" value="A1"> Код ошибки, который выдает основная функция main() в случае аварийного завершения работы</li>
                <li><input type="radio" name="Q29" value="A2"> Число будет восприниматься программой как 16-ное</li>
                <li><input type="radio" name="Q29" value="A3"> Приведение числа в 16-ной системе счисления в строку C-style</li>
                <li><input type="radio" name="Q29" value="A4"> Директива препроцессора, снимающая все предупреждения компилятора</li>
            </ul>

            <h3>Если в арифметическом выражении участвуют целый и вещественный операнды, то:</h3>
            <ul>
                <li><input type="radio" name="Q30" value="A1"> Ошибка компиляции</li>
                <li><input type="radio" name="Q30" value="A2"> Целый тип приводится к вещественному</li>
                <li><input type="radio" name="Q30" value="A3"> Вещественный тип приводится к целому</li>
            </ul>
            <input type="submit" style="margin-left:2cm; padding:initial; font-size:32px" value="Завершить тест"/>
        </form>
    </div>

</body>